# Copyright (c) Illia Danko 2022
#
# Tmux configuration file.


### Settings.

# Fix 256-color.
set -a terminal-overrides ",*256col*:RGB"
set-window-option -g xterm-keys on
set -g extended-keys always # allow to use non standard escape sequence, such as, C-, and C-.

# Undercurl.
set -g default-terminal "xterm-256color"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# Start windows and panes at 1, not 0.
set -g base-index 1
set -g pane-base-index 0

# Misc.
set -g mouse on
set -g set-titles on # show proper titles
set -g history-limit 65535
set -g allow-rename off # disable rename title automatically
set -g focus-events on  # update editor's buffer
set -sg escape-time 10

# Refresh status line every 5 seconds - Good for when music is playing / update
# time etc.
set -g status-interval 5

### Theme.

set -g status "on"
set -g status-position top

set -g message-style bg='#000000',fg='#ffffff'
set -g mode-style 'reverse'
set -g status-style bg=default,fg=default
set -g pane-active-border-style bg=default,fg=colour8
set -g pane-border-style bg=default,fg=colour8
set -g window-status-style fg=1,bg=default
set -g window-status-current-style fg=1,bg=default

set -g status-left ""
set -g status-right "#[fg=2]#{?client_prefix,#[fg=4],}#{?pane_in_mode,#[fg=5],} #S "
set -g window-status-current-format "  "
set -g window-status-format "  "

### Keybindings.

# Change prefix-key (optional).
unbind C-\\
set -g prefix C-\\
bind C-\\ send-prefix

# Require tmux 3.3a or higher.
is_not_zoomed_window="echo '#{window_zoomed_flag}' | grep -qwE '0'"
is_other_panes='echo "#{window_panes}" | grep -vqwE "1"'
is_editor="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE emacs"

# C-x bindings.
bind -Temacs-keys o if "$is_editor" "send C-x; send" "select-pane -t :.+"
bind -Temacs-keys 1 { kill-pane -a; movew -r; send C-x; send }
bind -Temacs-keys 0 if "$is_editor" "send C-x; send" 'if $is_other_panes kill-pane; movew -r'
bind -Temacs-keys % if "$is_editor" "send-prefix ; send-keys %" "split-window -h -c \"#{pane_current_path}\""
bind -Temacs-keys \" if "$is_editor" 'send-prefix ; send-keys \"' "split-window -v -c \"#{pane_current_path}\""
bind -Temacs-keys c if "$is_editor" "send-prefix ; send-keys c" "movew -r ; new-window -c \"#{pane_current_path}\""
bind -Temacs-keys k if "$is_editor" "send-prefix ; send-keys k" "kill-pane ; movew -r"
bind -Temacs-keys & kill-window \; movew -r
bind -Temacs-keys z resize-pane -Z
bind -Temacs-keys Any { send C-x; send }
bind -Troot C-x switch-client -Temacs-keys

# C-c bindings.
bind -Temacs-ckeys : command-prompt
bind -Temacs-ckeys Left swap-window -t -1
bind -Temacs-ckeys Right swap-window -t +1
bind -Temacs-ckeys s choose-session
bind -Temacs-ckeys [ copy-mode
bind -Temacs-ckeys 1 select-window -t 1
bind -Temacs-ckeys 2 select-window -t 2
bind -Temacs-ckeys 3 select-window -t 3
bind -Temacs-ckeys 4 select-window -t 4
bind -Temacs-ckeys 5 select-window -t 5
bind -Temacs-ckeys 6 select-window -t 6
bind -Temacs-ckeys 7 select-window -t 7
bind -Temacs-ckeys 8 select-window -t 8
bind -Temacs-ckeys 9 select-window -t 9
bind -Temacs-ckeys 0 select-window -t 0
bind -Temacs-ckeys Any { send C-c; send }
bind -Troot C-c switch-client -Temacs-ckeys


# Tmux bindings (optional).
set -g mode-keys emacs
set -g status-keys emacs
# For some reason works on MacOS as well.
bind-key -T copy-mode M-w send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

### Plugins.

## --- tmux-logging - save tmux logs to harddrive.
# Save all pane output to logging file by [<prefix> + alt + shift + p].
# Clear history [<prefix> + alt + c].
# - (https://github.com/tmux-plugins/tmux-logging)
# - (https://www.youtube.com/watch?v=Lqehvpe_djs)
set -g @logging-path "$HOME/.tmux/logs"
set -g @screen-capture-path "$HOME/.tmux/logs"
set -g @save-complete-history-path "$HOME/.tmux/logs"
set -g @plugin 'tmux-plugins/tmux-logging'

# Init plugin manager.
# Option 1: git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
# run '~/.tmux/plugins/tpm/tpm'
#
# Option 2: install https://aur.archlinux.org/tmux-plugin-manager-git.git if in Archlinux.
# run '/usr/share/tmux-plugin-manager-git/tpm'

# Option 3: install `sudo apt install tmux-plugin-manager`
run '/usr/share/tmux-plugin-manager/tpm'
