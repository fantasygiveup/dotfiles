#### basic settings.

# fix 256-color
set -a terminal-overrides ",*256col*:RGB"
set -g default-terminal "screen-256color"
set -g focus-events on  # update editor's buffer
set-window-option -g xterm-keys on
# Undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

set -sg escape-time 10

# start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 0
set -g status "on"
set -g status-position top

# Refresh status line every 5 seconds - Good for when music is playing / update
# time etc.
set -g status-interval 5

# Statusbar style.
set -g message-style 'reverse'
set -g mode-style bg='7'
set -g status-style fg='7'
set-window-option -g mode-style 'reverse' # copy mode selection
set -g pane-active-border-style bg=default,fg=colour8
set -g pane-border-style bg=default,fg=colour8
set-window-option -g window-status-current-style fg='5'
set-window-option -g window-status-style fg=colour8
set -g status-right "#[fg=5] #S "
set -g status-left ""
set-window-option -g window-status-current-format "  #I "
set-window-option -g window-status-format "  #I "

## Other settings ##
set -g mouse on
set -g set-titles on # show proper titles
set -g history-limit 65535
set -g allow-rename off # disable rename title automatically

# Custom key bindings.
unbind C-b
set -g prefix C-x
bind C-x send-prefix

##### Vim bindings.

is_not_zoomed_window="echo '#{window_zoomed_flag}' | grep -qwE '0'"
is_other_panes='echo "#{window_panes}" | grep -vqwE "1"'
is_editor="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
set-window-option -g mode-key vi
bind P paste-buffer
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip'
bind -T copy-mode-vi i send-keys -X copy-pipe-and-cancel 'xclip'
bind -T copy-mode-vi r send-keys -X rectangle-toggle
# Move window to left and right position.
bind -n M-h swap-window -t:-1 \; select-window -t:-1
bind -n M-l swap-window -t:+1 \; select-window -t:+1
# Neovim bindings: https://github.com/elijahdanko/tmuxnvim.
bind -n C-h if-shell "$is_editor" "send-keys C-h" "select-pane -L"
bind -n C-l if-shell "$is_editor" "send-keys C-l" "select-pane -R"
bind -n C-j if-shell "$is_editor" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_editor" "send-keys C-k" "select-pane -U"
bind -T copy-mode-vi C-h select-pane -L
bind -T copy-mode-vi C-l select-pane -R
bind -T copy-mode-vi C-j select-pane -D
bind -T copy-mode-vi C-k select-pane -U
# Optional.
bind % if "$is_not_zoomed_window" "split-window -h -c \"#{pane_current_path}\"" "select-pane -t :.+"
bind \" if "$is_not_zoomed_window" "split-window -v -c \"#{pane_current_path}\"" "select-pane -t :.+"
bind c new-window -c "#{pane_current_path}"
bind \# kill-window
bind x kill-pane
bind X if $is_other_panes kill-pane
bind o kill-pane -a

#### Plugins.

## --- tmux-logging - save tmux logs to harddrive.
# Save all pane output to logging file by [<prefix> + alt + shift + p].
# Clear history [<prefix> + alt + c].
# - (https://github.com/tmux-plugins/tmux-logging)
# - (https://www.youtube.com/watch?v=Lqehvpe_djs)
set -g @logging-path "$HOME/.tmux/logs"
set -g @screen-capture-path "$HOME/.tmux/logs"
set -g @save-complete-history-path "$HOME/.tmux/logs"
set -g @plugin 'tmux-plugins/tmux-logging'

# Init plugin manager.
# Option 1: git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
# run '~/.tmux/plugins/tpm/tpm'
#
# Option 2: install https://aur.archlinux.org/tmux-plugin-manager-git.git if in Archlinux.
run '/usr/share/tmux-plugin-manager-git/tpm'
