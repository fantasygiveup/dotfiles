#### basic settings.

# fix 256-color
set-option -a terminal-overrides ",*256col*:RGB"
set-option -g default-terminal "xterm-256color"
set-option -g focus-events on  # update editor's buffer
set-window-option -g xterm-keys on
# Undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

set-option -sg escape-time 10

# start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 0
set-option -g status "on"
set-option -g status-position top

# Refresh status line every 5 seconds - Good for when music is playing / update
# time etc.
set -g status-interval 5

# Statusbar style.
set-option -g message-style 'reverse'
set-option -g mode-style bg='7'
set-option -g status-style fg='7'
set-window-option -g mode-style 'reverse' # copy mode selection
set-option -g pane-active-border-style bg=default,fg=colour8
set-option -g pane-border-style bg=default,fg=colour8
set-window-option -g window-status-current-style fg='2'
set-window-option -g window-status-style fg=colour8
set-option -g status-right "#[fg=2] #S "
set-option -g status-left ""
set-window-option -g window-status-current-format "  #I "
set-window-option -g window-status-format "  #I "

## Other settings ##
set -g mouse on
set-option -g set-titles on # show proper titles
set -g history-limit 65535
set -g allow-rename off # disable rename title automatically

# Custom key bindings.
unbind C-b
set -g prefix C-q
bind C-q send-prefix

# Emacs-like selection & copy to clipboard.
set -g mode-keys emacs
set -g status-keys emacs
# Override M-w to copy to clipboard.
bind-key -T copy-mode M-w send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# Emacs bindings: https://github.com/elijahdanko/ttymux.el.
is_emacs="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE emacs"
is_other_panes='echo "#{window_panes}" | grep -vqwE "1"'
bind-key -T prefix % if "$is_emacs" "send-prefix ; send-keys %" "split-window -h -c \"#{pane_current_path}\""
bind-key -T prefix \" if "$is_emacs" 'send-prefix ; send-keys \"' "split-window -v -c \"#{pane_current_path}\""
bind-key -T prefix c if "$is_emacs" "send-prefix ; send-keys c" "new-window -c \"#{pane_current_path}\""
bind -Temacs-keys o if "$is_emacs" "send C-x; send" "select-pane -t :.+"
bind -Temacs-keys Any { send C-x; send }
bind -Temacs-keys 1 { kill-pane -a; send C-x; send }
bind -Temacs-keys 0 if "$is_emacs" "send C-x; send" 'if $is_other_panes kill-pane'
bind -Troot C-x switch-client -Temacs-keys

#### Plugins.
# plugin manager (install plugins: [<prefix> I])
set -g @plugin 'tmux-plugins/tpm'

# saving logs.
# save all pane output to logging file by [<prefix> + alt + shift + p]
# clear history [<prefix> + alt + c]
# https://github.com/tmux-plugins/tmux-logging
# https://www.youtube.com/watch?v=Lqehvpe_djs
set -g @logging-path "$HOME/.tmux/logs"
set -g @screen-capture-path "$HOME/.tmux/logs"
set -g @save-complete-history-path "$HOME/.tmux/logs"
set -g @plugin 'tmux-plugins/tmux-logging'

# Init plugin manager.
# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
run '~/.tmux/plugins/tpm/tpm'
# Or use https://aur.archlinux.org/tmux-plugin-manager.git if in Archlinux.
# run '/usr/share/tmux-plugin-manager/tpm'
